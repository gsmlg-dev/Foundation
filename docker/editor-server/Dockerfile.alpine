ARG CODE_SERVER_VERSION=4.16.1
FROM ghcr.io/gsmlg/code-server:v${CODE_SERVER_VERSION}-alpine

ENV CODE_SERVER_VERSION=$CODE_SERVER_VERSION
LABEL CODE_SERVER_VERSION=$CODE_SERVER_VERSION
LABEL maintainer="Jonathan Gao <gsmlg.com@gmail.com>"

LABEL org.opencontainers.image.source="https://github.com/gsmlg-dev/Foundation/tree/main/docker/editor-server"
LABEL org.opencontainers.image.description="Jonathan Gao's personal code-server in alpine, with his common dev envrionment."
LABEL org.opencontainers.image.licenses=MIT

ARG VERSION
LABEL VERSION=$VERSION
ENV EDITOR_VERSION=$VERSION

ARG DEBIAN_FRONTEND=noninteractive

ENV container=docker
ENV TZ=Asia/Shanghai

USER root

# update package list
RUN apk update

# install useful packages
RUN apk add \
  git git-lfs \
  gnupg \
  the_silver_searcher \
  tzdata \
  build-base \
  aria2 curl wget

RUN apk add nodejs-lts npm yarn

RUN apk add go

RUN apk add erlang elixir

RUN apk add ruby

RUN apk add php

RUN apk add rustup

RUN apk add clang llvm

RUN apk add python3

# install flutter
ARG FLUTTER_VERSION=3.13.2
ARG PUB_CACHE=/opt/flutter/.pub
ENV PUB_CACHE=/opt/flutter/.pub
RUN aria2c -o flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz \
  && tar xf flutter.tar.xz -C /opt \
  && echo 'export PATH="/opt/flutter/bin:$PATH"' | tee -a "/etc/zsh/zshrc" \
  && echo 'export PATH="$PATH":"/opt/flutter/.pub/bin"' | tee -a "/etc/zsh/zshrc" \
  && rm -f flutter.tar.xz \
  && /opt/flutter/bin/dart pub global activate mason_cli \
  && /opt/flutter/bin/dart pub global activate flutterpi_tool \
  && /opt/flutter/bin/dart pub global activate melos

# install cli53 gsmlg-cli
RUN export ARCH=`dpkg --print-architecture`; \
  curl -sSfL https://github.com/barnybug/cli53/releases/latest/download/cli53-linux-${ARCH} -o /usr/local/bin/cli53 \
  && chmod +x /usr/local/bin/cli53 \
  && curl -sSfL https://github.com/gsmlg-dev/gsmlg-cli/releases/latest/download/gsmlg-cli_linux_${ARCH} -o /usr/local/bin/gsmlg-cli \
  && chmod +x /usr/local/bin/gsmlg-cli

RUN apk add \
  terraform \
  aws-cli \
  ansible


# change permision
RUN chown -R coder:coder /opt

# clean cache install
RUN rm -rf /var/cache/* && rm -rf /tmp/*

USER coder
