name: elixir-gsmlg-build-and-release
on:
  push:
    paths:
      - "elixir/gsmlg/**"
      - "elixir/gsmlg_umbrella/**"
      - ".github/workflows/elixir-gsmlg-build-and-release.yml"
    branches:
      - "+([0-9])?(.{+([0-9]),x}).x"
      - "main"
      - "next"
      - "next-major"
      - "beta"
      - "alpha"
      - "!all-contributors/**"
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: üöÄ Release
        uses: gsmlg/semantic-release-action@v3
        id: semantic
        with:
          release_name: gsmlg
          working-directory: 'elixir/gsmlg_umbrella'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: elixir/gsmlg_umbrella
          file: elixir/gsmlg_umbrella/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: true
          build-args: |
            RELEASE_VERSION=${{ steps.semantic.outputs.new_release_version }}
          tags: |
            docker.io/gsmlg/gsmlg.org:v${{ steps.semantic.outputs.new_release_version }}
            docker.io/gsmlg/gsmlg.org:latest


