name: docker-buildimage-editor-server

on:
  push:
    branches: [ main ]
    paths:
      - "docker/editor-server/Dockerfile"
      - ".github/workflows/docker-buildimage-editor-server.yml"

jobs:
  build-editor-server-image:
    runs-on: ubuntu-latest-m

    steps:
      - name: 🛑 Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # - name: Setup node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: 20
      # - name: Create package.json
      #   run: |
      #     cat <<EOF > docker/editor-server/package.json
      #     {
      #       "name": "editor-server"
      #     }
      #     EOF
      # - name: 🏗 Run install semantic-release
      #   working-directory: docker/editor-server
      #   run: npm install --save-dev semantic-release-monorepo semantic-release @semantic-release/exec
      # - name: 🚀 Release
      #   working-directory: docker/editor-server
      #   id: semantic
      #   run: npx semantic-release --extends semantic-release-monorepo
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     GOPRIVATE: github.com/gsmlg-dev/gsmlg-golang
      # -
      #   name: check if a new release has been created
      #   run: |
      #     echo "New release version is ${{ steps.semantic.outputs.new_release_version }}"
      #     if [ -z "${{ steps.semantic.outputs.new_release_version }}" ]; then
      #       echo "No new release. Exiting..."
      #       exit 78
      #     fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWD }}
      - 
        name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      -
        name: Set build date
        id: build-date
        run: |
          echo "ym=$(date +%Y-%m)" >> $GITHUB_OUTPUT
          echo "date=$(date +%F)" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: docker/editor-server/
          file: docker/editor-server/Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            CODE_SERVER_VERSION=4.96.2
            VERSION=latest
            BUILD_MONTH=${{ steps.build-date.outputs.ym }}
            BUILD_DATE=${{ steps.build-date.outputs.date }}
          tags: |
            ghcr.io/gsmlg-dev/editor-server:latest
            docker.io/gsmlg/editor-server:latest
            ghcr.io/gsmlg-dev/editor-server:v4.96.2
            docker.io/gsmlg/editor-server:v4.96.2
