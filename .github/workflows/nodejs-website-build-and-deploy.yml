name: nodejs-website-build-and-deploy
on:
  push:
    paths:
      - "nodejs/packages/website/**"
      - ".github/workflows/nodejs-website-build-and-deploy.yml"
    branches:
      - "main"
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: ‚éî Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: üì• Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false
          working-directory: "nodejs/packages/website"

      - name: üèó Run build script
        working-directory: "nodejs/packages/website"
        run: npm run build

      - name: üèó Run install semantic-release
        working-directory: 'nodejs/packages/website'
        run: npm install --save-dev semantic-release-monorepo semantic-release

      - name: üöÄ Release
        uses: gsmlg/semantic-release-action@v3
        id: semantic
        with:
          working-directory: 'nodejs/packages/website'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install SSH Client üîë
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          branch: main # The branch the action should deploy to.
          folder: "nodejs/packages/website/build" # The folder the action should deploy.
          clean: true # Automatically remove deleted files from the deploy branch
          repository-name: "gsmlg/gsmlg.github.io"
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v2

      - name: Update WEB_VERSION in elixir docker image üê≥
        working-directory: 'elixir/gsmlg_umbrella'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          WEB_VERSION: ${{ steps.semantic.outputs.new_release_version }}
        run: |
          [[ -z "$WEB_VERSION" ]] && exit 252
          sed "s;WEB_VERSION=[0-9]\+.[0-9]\+.[0-9]\+;WEB_VERSION=${WEB_VERSION};g" Dockerfile
          sed -i "s;WEB_VERSION=[0-9]\+.[0-9]\+.[0-9]\+;WEB_VERSION=${WEB_VERSION};g" Dockerfile
          git config --global user.email "action-bot@gsmlg.dev"
          git config --global user.name "Action Bot"
          git add Dockerfile
          git commit -m "feat(elixir:gsmlg): Update website to version ${WEB_VERSION}."
          git push -f origin main:next

